@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage

@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.PublishedCache
@using Umbraco.Cms.Core.Routing
@using Umbraco.Cms.Core.Services.Navigation

@inject IVariationContextAccessor VariationContextAccessor
@inject IPublishedContentCache PublishedContentCache
@inject IDocumentNavigationQueryService DocumentNavigationQueryService
@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider PublishedUrlProvider


@{
	var rootContent = Umbraco.ContentAtRoot();
	var siteSettings = rootContent.OfType<SiteSettings>().FirstOrDefault();
	var logo = siteSettings?.SiteLogo;
	var selection = Model.Root().Children().Where(x => x.IsVisible(PublishedValueFallback)).ToArray();

}



<header class="shadow">
	<nav>
		<div class="container nav-container">
			@if (logo != null)
			{
				<a class="logo" href="/">
					<img src="@logo.Url()" alt="Onatrix" />
				</a>
			}
			else
			{
				<a href="/">Onatrix</a>
			}

			@if (selection?.Length > 0)
			{
				<ul class="Nav-list">
					@foreach (var item in selection)
					{
						<li class="@(item.IsAncestorOrSelf(Model) ? "current" : null) list-item">
							<a class="list-item" href="@item.Url(PublishedUrlProvider)">@item.Name</a>
						</li>
					}
				</ul>
			}

			<div class="search">
				<i class="fa-solid fa-magnifying-glass"></i>
			</div>
		</div>


	</nav>
</header>